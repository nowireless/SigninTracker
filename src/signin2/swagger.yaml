swagger: "2.0"
info:
  title: "Sign In tracker API"
  # description: ""
  version: 1.0.0

host: api.example.com
basePath: /v1
schemes:
  # - https
  - http

consumes:
  - application/json

produces:
  - application/json

paths:
  /people:
    get:
      summary: Returns a collection of people
      description: Collection of people registered in the sign in tracker.
                   By default only @meta.id's are returned in the colleciton. The
                   links can be expanded if desired. 
      tags:
        - People
      parameters:
      - in: query
        name: expand  
        type: boolean
        default: true
        description: Expand the links
      responses:
        200:
          description: A array of User objects
          schema:
            type: object
            properties:
              "@meta.id":
                $ref: "#/definitions/id"
              Members:
                type: array
                items:
                  allOf:
                  - $ref: "#/definitions/idRef"
                  - $ref: "#/definitions/Person"
            required:
              - Members
              - "@meta.id"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    post:
      summary: Create a new Person
      tags:
        - People
      parameters:
      - in: body
        name: person
        schema:
          $ref: "#/definitions/Person"
      responses:
        201:
          description: Person successfully created
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"

  /people/{id}:
    get:
      summary: Get a particular person
      tags:
        - People
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        200:
          description: Person response
          schema:
            $ref: "#/definitions/Person"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: Delete the person with the given ID
      tags:
        - People
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        204:
          description: Representation of the person that was just deleted.
          schema:
            $ref: "#/definitions/Person"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    patch:
      summary: Update a particular peson
      tags:
        - People
      parameters:
      - name: id
        in: path
        required: true
        type: string
      - in: body
        name: student
        schema:
          $ref: "#/definitions/Person"
      responses:
        200:
          description: Updated student response
          schema:
            $ref: "#/definitions/Person"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"

  /teams:
    get:
      summary: Returns a collection of teams
      description: Collection of teams registered in the sign in tracker.
                   By default only @meta.id's are returned in the colleciton. The
                   links can be expanded if desired. 
      tags:
        - Teams
      parameters:
      - in: query
        name: expand  
        type: boolean
        default: true
        description: Expand the links
      responses:
        200:
          description: A array of team objects
          schema:
            type: object
            properties:
              "@meta.id":
                $ref: "#/definitions/id"
              Members:
                type: array
                items:
                  allOf:
                  - $ref: "#/definitions/idRef"
                  - $ref: "#/definitions/Team"
            required:
              - Members
              - "@meta.id"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    post:
      summary: Create a new team
      tags:
        - Teams

      parameters:
      - in: body
        name: mentor
        schema:
          $ref: "#/definitions/Team"
      responses:
        201:
          description: Team successfully created
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"

  /teams/{id}:
    get:
      summary: Get a particular team
      tags:
        - Teams

      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        200:
          description: Team response
          schema:
            $ref: "#/definitions/Team"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: Delete the Team with the given ID
      tags:
        - Teams

      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        204:
          description: Representation of the Team that was just deleted.
          schema:
            $ref: "#/definitions/Team"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    patch:
      summary: Update a particular Team
      tags:
        - Teams
      parameters:
      - name: id
        in: path
        required: true
        type: string
      - in: body
        name: mentor
        schema:
          $ref: "#/definitions/Team"
          
      responses:
        200:
          description: Updated Team response
          schema:
            $ref: "#/definitions/Team"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"

  /meetings:
    get:
      summary: Returns a collection of Meetings
      description: Collection of meetings registered in the sign in tracker.
                   By default only @meta.id's are returned in the colleciton. The
                   links can be expanded if desired. 
      tags:
        - Meetings
      parameters:
      - in: query
        name: expand  
        type: boolean
        default: true
        description: Expand the links
      - in: query
        name: beforeDate
        type: string
        format: date
        description: Meetings before this date
      - in: query
        name: afterDate
        type: string
        format: date 
        description: Meetings after this date
      - in: query
        name: teamid
        type: integer
        description: Limit meetings to a specific team. Use database ID
        # TODO support multiple teams at once
          # anyOf:
          #   - type: integer
          #   # - type: array
          #     # items: integer
      responses:
        200:
          description: A array of meeting objects
          schema:
            type: object
            properties:
              "@meta.id":
                $ref: "#/definitions/id"
              Members:
                type: array
                items:
                  allOf:
                  - $ref: "#/definitions/idRef"
                  - $ref: "#/definitions/Meeting"
            required:
              - Members
              - "@meta.id"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    post:
      summary: Create a new meeting
      tags:
        - Meetings

      parameters:
      - in: body
        name: meeting
        schema:
          $ref: "#/definitions/Meeting"
      responses:
        201:
          description: Meeting successfully created
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"

  /meetings/{id}:
    get:
      summary: Get a particular meeting
      tags:
        - Meetings

      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        200:
          description: Meeting response
          schema:
            $ref: "#/definitions/Meeting"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: Delete the meeting with the given ID
      tags:
        - Meetings

      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        204:
          description: Representation of the meeting that was just deleted.
          schema:
            $ref: "#/definitions/Meeting"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    patch:
      summary: Update a particular meeting
      tags:
        - Meetings
      parameters:
      - name: id
        in: path
        required: true
        type: string
      - in: body
        name: meeting
        schema:
          $ref: "#/definitions/Meeting"
      responses:
        200:
          description: Updated meeting response
          schema:
            $ref: "#/definitions/Meeting"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"

definitions:
  Person:
    type: object
    properties:
      # "@meta.id":
      #   $ref: "#/definitions/id"
      PersonId:
        type: integer
      name:
        type: object
        properties:
          first:
            type: string
            example: Ryan
          last:
            type: string
            example: Sjostrand
        required:
          - first
          - last
      checkinid:
        type: string
      student:
        type: object
        properties:
          schoolId:
            type: string
            example: sjost150
          schoolEmail:
            type: string
            format: email
          graduationYear:
            type: integer
            example: 2015
          teams:
            type: array
            items:
              $ref: "#/definitions/idRef"
      mentor:
        type: object
        properties:
          teams:
            type: array
            items:
              $ref: "#/definitions/idRef"
      parents:
        type: object
        properties:
          teams:
            type: array
            items:
              $ref: "#/definitions/idRef"
      parentOf:
        type: array
        items:
          type: object
          properties:
            relation:
              type: string
              enum: ["Father", "Mother", "Guardian"]
            student:
              $ref: "#/definitions/idRef"
    required:
      # - "@meta.id"
      - name
      - id

  # Mentor:
  #   type: object
  #   properties:
  #     # "@meta.id":
  #     #   $ref: "#/definitions/id"
  #     id:
  #       type: string
  #       example: abc123
  #     name:
  #       type: object
  #       properties:
  #         first:
  #           type: string
  #           example: Ryan
  #         last:
  #           type: string
  #           example: Sjostrand
  #       required:
  #         - first
  #         - last
  #   required:
  #     # - "@meta.id"
  #     - name
  #     - id

  Meeting:
    type: object
    properties:
      id:
        type: string
      Day:
        type: string
        format: date
      StartTime:
        type: string
        description: Start time of meeting. Using 24 hour time format. HH:MM:SS 
        pattern: (?:[01]\d|2[0-3]):(?:[0-5]\d):(?:[0-5]\d)
      EndTime:
        type: string
        description: End time of meeting. Using 24 hour time format. HH:MM:SS 
        pattern: (?:[01]\d|2[0-3]):(?:[0-5]\d):(?:[0-5]\d)

      Teams:
        type: array
        items:
          $ref: "#/definitions/idRef"

      Committed:
        type: array
        items: 
          $ref: "#/definitions/idRef"
      SignedIn:
        type: array
        items: 
          $ref: "#/definitions/idRef"
      SignedOut:
        type: array
        items: 
           $ref: "#/definitions/idRef"

  Team:
    type: object
    properties:
      Competition:
        type: string
        enum: ["FRC", "FTC", "FLL", "FLLjr"]
        example: FRC
      Number:
        type: integer
        example: 3081
      Name: 
        type: string
        example: RoboEagles

      Students:
        type: array
        items: 
          $ref: "#/definitions/idRef"
      Mentors:
        type: array
        items: 
          $ref: "#/definitions/idRef"
      Meetings:
        type: array
        items: 
          $ref: "#/definitions/idRef"

  Day:
    type: object
    properties:
      Year:
        type: integer
      Month:
        type: integer
        minimum: 1
        maximum: 12
      Day:
        type: integer
        minimum: 1
        maximum: 31

  Time:
    type: object
    properties:
      "Hour":
        type: integer
        minimum: 0
        maximum: 24
      "Minute":
        type: integer
        minimum: 0
        maximum: 59
      # "Second":
      #   type: integer
      #   default: 0
      #   minimum: 0
      #   maximum: 59
    required:
      - Hour
      - Minute


  Error:
    type: "object"
    required:
      - code
      - message
    properties:
      code: 
        type: integer
        format: int32
      message:
        type: string



  # These meta tags have been influenced after the OData spec
  # Based/Influenced from: http://redfish.dmtf.org/schemas/v1/odata-v4.yaml
  count:
    description: The number of items in a collection.
    readOnly: true
    type: integer

  id:
    description: The unique identifier for a resource.
    format: uri-reference
    readOnly: true
    type: string
    example: "foo"

  idRef:
    additionalProperties: false
    description: A reference to a resource.
    properties:
      '@meta.id':
        $ref: '#/definitions/id'
    type: object
