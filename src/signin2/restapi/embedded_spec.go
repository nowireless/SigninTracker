// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Sign In tracker API",
    "version": "1.0.0"
  },
  "host": "virtserver.swaggerhub.com",
  "basePath": "/kennedyrobotics/SignIn/1.0.0",
  "paths": {
    "/students": {
      "get": {
        "description": "Collection of students registered in the sign in tracker. By default only @meta.id's are returned in the colleciton. The links can be expanded if desired.",
        "summary": "Returns a collection of students",
        "parameters": [
          {
            "type": "boolean",
            "default": true,
            "description": "Expand the links",
            "name": "expand",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A array of User objects",
            "schema": {
              "type": "object",
              "required": [
                "Members",
                "@meta.id"
              ],
              "properties": {
                "@meta.id": {
                  "$ref": "#/definitions/id"
                },
                "Members": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/definitions/idRef"
                      },
                      {
                        "$ref": "#/definitions/Student"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Create a new student",
        "parameters": [
          {
            "name": "student",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Student"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Student successfully created"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/students/{id}": {
      "get": {
        "summary": "Get a particular student",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Student response",
            "schema": {
              "$ref": "#/definitions/Student"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete the student with the given ID",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Representation of the student that was just deleted.",
            "schema": {
              "$ref": "#/definitions/Student"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "summary": "Update a particular student",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "student",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Student"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated student response",
            "schema": {
              "$ref": "#/definitions/Student"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Student": {
      "type": "object",
      "required": [
        "@meta.id",
        "name",
        "id"
      ],
      "properties": {
        "@meta.id": {
          "$ref": "#/definitions/id"
        },
        "graduationYear": {
          "type": "integer",
          "example": 2015
        },
        "id": {
          "type": "string",
          "example": "abc123"
        },
        "name": {
          "type": "object",
          "required": [
            "first",
            "last"
          ],
          "properties": {
            "first": {
              "type": "string",
              "example": "Ryan"
            },
            "last": {
              "type": "string",
              "example": "Sjostrand"
            }
          }
        },
        "schoolId": {
          "type": "string",
          "example": "sjost150"
        }
      }
    },
    "count": {
      "description": "The number of items in a collection.",
      "type": "integer",
      "readOnly": true
    },
    "id": {
      "description": "The unique identifier for a resource.",
      "type": "string",
      "format": "uri-reference",
      "readOnly": true,
      "example": "foo"
    },
    "idRef": {
      "description": "A reference to a resource.",
      "type": "object",
      "properties": {
        "@meta.id": {
          "$ref": "#/definitions/id"
        }
      },
      "additionalProperties": false
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Sign In tracker API",
    "version": "1.0.0"
  },
  "host": "virtserver.swaggerhub.com",
  "basePath": "/kennedyrobotics/SignIn/1.0.0",
  "paths": {
    "/students": {
      "get": {
        "description": "Collection of students registered in the sign in tracker. By default only @meta.id's are returned in the colleciton. The links can be expanded if desired.",
        "summary": "Returns a collection of students",
        "parameters": [
          {
            "type": "boolean",
            "default": true,
            "description": "Expand the links",
            "name": "expand",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A array of User objects",
            "schema": {
              "type": "object",
              "required": [
                "Members",
                "@meta.id"
              ],
              "properties": {
                "@meta.id": {
                  "$ref": "#/definitions/id"
                },
                "Members": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/definitions/idRef"
                      },
                      {
                        "$ref": "#/definitions/Student"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Create a new student",
        "parameters": [
          {
            "name": "student",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Student"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Student successfully created"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/students/{id}": {
      "get": {
        "summary": "Get a particular student",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Student response",
            "schema": {
              "$ref": "#/definitions/Student"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete the student with the given ID",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Representation of the student that was just deleted.",
            "schema": {
              "$ref": "#/definitions/Student"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "summary": "Update a particular student",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "student",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Student"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated student response",
            "schema": {
              "$ref": "#/definitions/Student"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Student": {
      "type": "object",
      "required": [
        "@meta.id",
        "name",
        "id"
      ],
      "properties": {
        "@meta.id": {
          "$ref": "#/definitions/id"
        },
        "graduationYear": {
          "type": "integer",
          "example": 2015
        },
        "id": {
          "type": "string",
          "example": "abc123"
        },
        "name": {
          "type": "object",
          "required": [
            "first",
            "last"
          ],
          "properties": {
            "first": {
              "type": "string",
              "example": "Ryan"
            },
            "last": {
              "type": "string",
              "example": "Sjostrand"
            }
          }
        },
        "schoolId": {
          "type": "string",
          "example": "sjost150"
        }
      }
    },
    "count": {
      "description": "The number of items in a collection.",
      "type": "integer",
      "readOnly": true
    },
    "id": {
      "description": "The unique identifier for a resource.",
      "type": "string",
      "format": "uri-reference",
      "readOnly": true,
      "example": "foo"
    },
    "idRef": {
      "description": "A reference to a resource.",
      "type": "object",
      "properties": {
        "@meta.id": {
          "$ref": "#/definitions/id"
        }
      },
      "additionalProperties": false
    }
  }
}`))
}
