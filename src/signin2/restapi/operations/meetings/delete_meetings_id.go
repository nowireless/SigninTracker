// Code generated by go-swagger; DO NOT EDIT.

package meetings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteMeetingsIDHandlerFunc turns a function with the right signature into a delete meetings ID handler
type DeleteMeetingsIDHandlerFunc func(DeleteMeetingsIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteMeetingsIDHandlerFunc) Handle(params DeleteMeetingsIDParams) middleware.Responder {
	return fn(params)
}

// DeleteMeetingsIDHandler interface for that can handle valid delete meetings ID params
type DeleteMeetingsIDHandler interface {
	Handle(DeleteMeetingsIDParams) middleware.Responder
}

// NewDeleteMeetingsID creates a new http.Handler for the delete meetings ID operation
func NewDeleteMeetingsID(ctx *middleware.Context, handler DeleteMeetingsIDHandler) *DeleteMeetingsID {
	return &DeleteMeetingsID{Context: ctx, Handler: handler}
}

/*DeleteMeetingsID swagger:route DELETE /meetings/{id} Meetings deleteMeetingsId

Delete the meeting with the given ID

*/
type DeleteMeetingsID struct {
	Context *middleware.Context
	Handler DeleteMeetingsIDHandler
}

func (o *DeleteMeetingsID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteMeetingsIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
