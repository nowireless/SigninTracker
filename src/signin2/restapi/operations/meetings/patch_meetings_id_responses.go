// Code generated by go-swagger; DO NOT EDIT.

package meetings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "signin2/models"
)

// PatchMeetingsIDOKCode is the HTTP code returned for type PatchMeetingsIDOK
const PatchMeetingsIDOKCode int = 200

/*PatchMeetingsIDOK Updated meeting response

swagger:response patchMeetingsIdOK
*/
type PatchMeetingsIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Meeting `json:"body,omitempty"`
}

// NewPatchMeetingsIDOK creates PatchMeetingsIDOK with default headers values
func NewPatchMeetingsIDOK() *PatchMeetingsIDOK {

	return &PatchMeetingsIDOK{}
}

// WithPayload adds the payload to the patch meetings Id o k response
func (o *PatchMeetingsIDOK) WithPayload(payload *models.Meeting) *PatchMeetingsIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch meetings Id o k response
func (o *PatchMeetingsIDOK) SetPayload(payload *models.Meeting) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchMeetingsIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PatchMeetingsIDDefault Unexpected error

swagger:response patchMeetingsIdDefault
*/
type PatchMeetingsIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPatchMeetingsIDDefault creates PatchMeetingsIDDefault with default headers values
func NewPatchMeetingsIDDefault(code int) *PatchMeetingsIDDefault {
	if code <= 0 {
		code = 500
	}

	return &PatchMeetingsIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the patch meetings ID default response
func (o *PatchMeetingsIDDefault) WithStatusCode(code int) *PatchMeetingsIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the patch meetings ID default response
func (o *PatchMeetingsIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the patch meetings ID default response
func (o *PatchMeetingsIDDefault) WithPayload(payload *models.Error) *PatchMeetingsIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch meetings ID default response
func (o *PatchMeetingsIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchMeetingsIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
