// Code generated by go-swagger; DO NOT EDIT.

package people

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PatchPeopleIDHandlerFunc turns a function with the right signature into a patch people ID handler
type PatchPeopleIDHandlerFunc func(PatchPeopleIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PatchPeopleIDHandlerFunc) Handle(params PatchPeopleIDParams) middleware.Responder {
	return fn(params)
}

// PatchPeopleIDHandler interface for that can handle valid patch people ID params
type PatchPeopleIDHandler interface {
	Handle(PatchPeopleIDParams) middleware.Responder
}

// NewPatchPeopleID creates a new http.Handler for the patch people ID operation
func NewPatchPeopleID(ctx *middleware.Context, handler PatchPeopleIDHandler) *PatchPeopleID {
	return &PatchPeopleID{Context: ctx, Handler: handler}
}

/*PatchPeopleID swagger:route PATCH /people/{id} People patchPeopleId

Update a particular peson

*/
type PatchPeopleID struct {
	Context *middleware.Context
	Handler PatchPeopleIDHandler
}

func (o *PatchPeopleID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPatchPeopleIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
